{"version":3,"sources":["../../../../src/assertions/toHaveObjectWithNameEqualTo/index.ts"],"names":["toHaveS3ObjectWithNameEqualTo","bucketName","objectName","s3","AWSClient","S3","params","Bucket","Key","message","getObject","promise","error"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;eAEe;AACb,QAAMA,6BAAN,CACEC,UADF,EAEEC,UAFF,EAG6B;AAC3B,UAAMC,EAAE,GAAG,IAAIC,mBAAUC,EAAd,EAAX;AACA,UAAMC,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAEN,UADK;AAEbO,MAAAA,GAAG,EAAEN;AAFQ,KAAf;AAKA,QAAIO,OAAJ;;AACA,QAAI;AACF,YAAMN,EAAE,CAACO,SAAH,CAAaJ,MAAb,EAAqBK,OAArB,EAAN;AACAF,MAAAA,OAAO,GAAI,YAAWR,UAAW,6BAA4BC,UAAW,EAAxE;AAEA,aAAO,4BAAWO,OAAX,EAAoB,IAApB,CAAP;AACD,KALD,CAKE,OAAOG,KAAP,EAAc;AACd,UAAI,6BAAiBA,KAAjB,CAAJ,EAA6B;AAC3BH,QAAAA,OAAO,GAAI,YAAWR,UAAW,6BAA4BC,UAAW,cAAxE;AAEA,eAAO,4BAAWO,OAAX,EAAoB,KAApB,CAAP;AACD;;AACD,YAAMG,KAAN;AACD;AACF;;AAzBY,C","sourcesContent":["import { AWSClient } from \"helpers/general\";\nimport { testResult, TestResultOutput } from \"utils/testResult\";\nimport { isNoSuchKeyError } from \"../utils\";\n\nexport default {\n  async toHaveS3ObjectWithNameEqualTo(\n    bucketName: string,\n    objectName: string\n  ): Promise<TestResultOutput> {\n    const s3 = new AWSClient.S3();\n    const params = {\n      Bucket: bucketName,\n      Key: objectName,\n    };\n\n    let message;\n    try {\n      await s3.getObject(params).promise();\n      message = `expected ${bucketName} to have object with name ${objectName}`;\n\n      return testResult(message, true);\n    } catch (error) {\n      if (isNoSuchKeyError(error)) {\n        message = `expected ${bucketName} to have object with name ${objectName} - not found`;\n\n        return testResult(message, false);\n      }\n      throw error;\n    }\n  },\n};\n"],"file":"index.js"}