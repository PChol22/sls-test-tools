{"version":3,"sources":["../../../../src/assertions/toExistAsS3Bucket/index.ts"],"names":["toExistAsS3Bucket","bucketName","s3","AWSClient","S3","params","Bucket","message","headBucket","promise","error"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;eAEe;AACb,QAAMA,iBAAN,CAAwBC,UAAxB,EAAuE;AACrE,UAAMC,EAAE,GAAG,IAAIC,mBAAUC,EAAd,EAAX;AACA,UAAMC,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAEL;AADK,KAAf;AAIA,QAAIM,OAAJ;;AACA,QAAI;AACF,YAAML,EAAE,CAACM,UAAH,CAAcH,MAAd,EAAsBI,OAAtB,EAAN;AACAF,MAAAA,OAAO,GAAI,yCAAwCN,UAAW,EAA9D;AAEA,aAAO,4BAAWM,OAAX,EAAoB,IAApB,CAAP;AACD,KALD,CAKE,OAAOG,KAAP,EAAc;AACd,UAAI,uBAAWA,KAAX,CAAJ,EAAuB;AACrBH,QAAAA,OAAO,GAAI,yCAAwCN,UAAW,cAA9D;AAEA,eAAO,4BAAWM,OAAX,EAAoB,KAApB,CAAP;AACD;;AACD,YAAMG,KAAN;AACD;AACF;;AArBY,C","sourcesContent":["import { AWSClient } from \"helpers/general\";\nimport { testResult, TestResultOutput } from \"utils/testResult\";\nimport { is404Error } from \"../utils\";\n\nexport default {\n  async toExistAsS3Bucket(bucketName: string): Promise<TestResultOutput> {\n    const s3 = new AWSClient.S3();\n    const params = {\n      Bucket: bucketName,\n    };\n\n    let message;\n    try {\n      await s3.headBucket(params).promise();\n      message = `expected S3 bucket to exist with name ${bucketName}`;\n\n      return testResult(message, true);\n    } catch (error) {\n      if (is404Error(error)) {\n        message = `expected S3 bucket to exist with name ${bucketName} - not found`;\n\n        return testResult(message, false);\n      }\n      throw error;\n    }\n  },\n};\n"],"file":"index.js"}