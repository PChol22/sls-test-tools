{"version":3,"sources":["../../../../src/assertions/toMatchStateMachineOutput/index.ts"],"names":["toMatchStateMachineOutput","stateMachineName","expectedOutput","stepFunctions","AWSStepFunctions","stepFunctionObject","StepFunctions","build","smArn","obtainStateMachineArn","exArn","obtainExecutionArn","executionResult","describeExecution","executionArn","promise","status","output","JSON","stringify"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;eAEe;AACb,QAAMA,yBAAN,CACEC,gBADF,EAEEC,cAFF,EAG6B;AAC3B,UAAMC,aAAa,GAAG,IAAIC,qBAAJ,EAAtB;AACA,UAAMC,kBAAkB,GAAG,MAAMC,uBAAcC,KAAd,EAAjC,CAF2B,CAG3B;;AACA,UAAMC,KAAK,GAAG,MAAMH,kBAAkB,CAACI,qBAAnB,CAClBR,gBADkB,CAApB,CAJ2B,CAO3B;;AACA,UAAMS,KAAK,GAAG,MAAML,kBAAkB,CAACM,kBAAnB,CAAsCH,KAAtC,CAApB;AAEA,UAAMI,eAAe,GAAG,MAAMT,aAAa,CACxCU,iBAD2B,CACT;AACjBC,MAAAA,YAAY,EAAEJ;AADG,KADS,EAI3BK,OAJ2B,EAA9B;;AAMA,QAAIH,eAAe,CAACI,MAAhB,KAA2B,WAA/B,EAA4C;AAC1C,UAAIJ,eAAe,CAACK,MAAhB,KAA2Bf,cAA/B,EAA+C;AAC7C,eAAO,4BACJ,aAAYgB,IAAI,CAACC,SAAL,CAAeP,eAAe,CAACK,MAA/B,CAAuC,cAD/C,EAEL,IAFK,CAAP;AAID,OALD,MAKO;AACL,eAAO,4BACJ,uBAAsBC,IAAI,CAACC,SAAL,CACrBjB,cADqB,CAErB,6BAA4BgB,IAAI,CAACC,SAAL,CAC5BP,eAAe,CAACK,MADY,CAE5B,EALG,EAML,KANK,CAAP;AAQD;AACF;;AAED,WAAO,4BACL,6EADK,EAEL,KAFK,CAAP;AAID;;AA1CY,C","sourcesContent":["import { testResult, TestResultOutput } from \"../../utils/testResult\";\nimport { StepFunctions as AWSStepFunctions } from \"aws-sdk\";\nimport StepFunctions from \"../../helpers/stepFunctions\";\n\nexport default {\n  async toMatchStateMachineOutput(\n    stateMachineName: string,\n    expectedOutput: unknown\n  ): Promise<TestResultOutput> {\n    const stepFunctions = new AWSStepFunctions();\n    const stepFunctionObject = await StepFunctions.build();\n    // Helper to get stateMachine ARN from stateMachine name\n    const smArn = await stepFunctionObject.obtainStateMachineArn(\n      stateMachineName\n    );\n    // Helper to get latest execution ARN for given stateMachine\n    const exArn = await stepFunctionObject.obtainExecutionArn(smArn);\n\n    const executionResult = await stepFunctions\n      .describeExecution({\n        executionArn: exArn,\n      })\n      .promise();\n\n    if (executionResult.status === \"SUCCEEDED\") {\n      if (executionResult.output === expectedOutput) {\n        return testResult(\n          `Output is ${JSON.stringify(executionResult.output)} as expected`,\n          true\n        );\n      } else {\n        return testResult(\n          `Expected output was ${JSON.stringify(\n            expectedOutput\n          )}, but output received was ${JSON.stringify(\n            executionResult.output\n          )}`,\n          false\n        );\n      }\n    }\n\n    return testResult(\n      \"Step Function execution failed. Cannot verify output for failed executions.\",\n      false\n    );\n  },\n};\n"],"file":"index.js"}