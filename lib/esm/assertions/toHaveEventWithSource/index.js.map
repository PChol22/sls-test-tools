{"version":3,"sources":["../../../../src/assertions/toHaveEventWithSource/index.ts"],"names":["toHaveEventWithSource","Events","expectedSourceName","message","Messages","undefined","length","parsedBody","JSON","parse","Body","source"],"mappings":";;;;;;;AAAA;;eAGe;AACbA,EAAAA,qBAAqB,CACnBC,MADmB,EAEnBC,kBAFmB,EAGD;AAClB,QAAIC,OAAJ;;AAEA,QAAIF,MAAM,CAACG,QAAP,KAAoBC,SAApB,IAAiCJ,MAAM,CAACG,QAAP,CAAgBE,MAAhB,GAAyB,CAA9D,EAAiE;AAC/D,aAAO,4BAAW,8BAAX,EAA2C,KAA3C,CAAP;AACD;;AAED,UAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWR,MAAM,CAACG,QAAP,CAAgB,CAAhB,EAAmBM,IAA9B,CAAnB;;AAIA,QAAIH,UAAU,CAACI,MAAX,KAAsBT,kBAA1B,EAA8C;AAC5CC,MAAAA,OAAO,GAAI,sCAAqCD,kBAAmB,EAAnE;AAEA,aAAO,4BAAWC,OAAX,EAAoB,IAApB,CAAP;AACD;;AACDA,IAAAA,OAAO,GAAI,sBACTI,UAAU,CAACI,MAAX,IAAqB,WACtB,qCAAoCT,kBAAmB,GAFxD;AAIA,WAAO,4BAAWC,OAAX,EAAoB,KAApB,CAAP;AACD;;AAzBY,C","sourcesContent":["import { testResult, TestResultOutput } from \"utils/testResult\";\nimport { SQS } from \"aws-sdk\";\n\nexport default {\n  toHaveEventWithSource(\n    Events: SQS.ReceiveMessageResult,\n    expectedSourceName: string\n  ): TestResultOutput {\n    let message;\n\n    if (Events.Messages === undefined || Events.Messages.length < 1) {\n      return testResult(\"There are no events present.\", false);\n    }\n\n    const parsedBody = JSON.parse(Events.Messages[0].Body) as {\n      source?: string;\n    };\n\n    if (parsedBody.source === expectedSourceName) {\n      message = `expected sent event to have source ${expectedSourceName}`;\n\n      return testResult(message, true);\n    }\n    message = `sent event source \"${\n      parsedBody.source ?? \"undefined\"\n    }\" does not match expected source \"${expectedSourceName}\"`;\n\n    return testResult(message, false);\n  },\n};\n"],"file":"index.js"}