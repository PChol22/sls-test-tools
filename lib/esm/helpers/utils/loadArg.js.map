{"version":3,"sources":["../../../../src/helpers/utils/loadArg.ts"],"names":["argv","process","isNonEmptyString","arg","loadArg","cliArg","processEnvName","defaultValue","env","undefined","Error"],"mappings":";;;;;;;;;AAAA;;AAEA,MAAMA,IAAI,GAAG,oBAAMC,OAAO,CAACD,IAAd,EAAoBA,IAAjC;;AAEA,MAAME,gBAAgB,GAAIC,GAAD,IACvB,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,EADrC;;AAGO,MAAMC,OAAO,GAAG,CAAC;AACtBC,EAAAA,MADsB;AAEtBC,EAAAA,cAFsB;AAGtBC,EAAAA;AAHsB,CAAD,KAQT;AACZ,MAAIJ,GAAG,GAAGH,IAAI,CAACK,MAAD,CAAd;;AAEA,MAAIH,gBAAgB,CAACC,GAAD,CAApB,EAA2B;AACzB,WAAOA,GAAP;AACD;;AAEDA,EAAAA,GAAG,GAAGF,OAAO,CAACO,GAAR,CAAYF,cAAZ,CAAN;;AAEA,MAAIJ,gBAAgB,CAACC,GAAD,CAApB,EAA2B;AACzB,WAAOA,GAAP;AACD;;AAED,MAAII,YAAY,KAAKE,SAArB,EAAgC;AAC9B,UAAM,IAAIC,KAAJ,CACH,KAAIL,MAAO,oBAAmBC,cAAe,oBAD1C,CAAN;AAGD;;AAED,SAAOC,YAAP;AACD,CA5BM","sourcesContent":["import yargs from \"yargs\";\n\nconst argv = yargs(process.argv).argv as Record<string, unknown>;\n\nconst isNonEmptyString = (arg: unknown): arg is string =>\n  typeof arg === \"string\" && arg !== \"\";\n\nexport const loadArg = ({\n  cliArg,\n  processEnvName,\n  defaultValue,\n}: {\n  cliArg: string;\n  processEnvName: string;\n  defaultValue?: string;\n}): string => {\n  let arg = argv[cliArg];\n\n  if (isNonEmptyString(arg)) {\n    return arg;\n  }\n\n  arg = process.env[processEnvName];\n\n  if (isNonEmptyString(arg)) {\n    return arg;\n  }\n\n  if (defaultValue === undefined) {\n    throw new Error(\n      `--${cliArg} CLI argument or ${processEnvName} env var required.`\n    );\n  }\n\n  return defaultValue;\n};\n"],"file":"loadArg.js"}