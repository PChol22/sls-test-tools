{"version":3,"sources":["../../../src/helpers/stepFunctions.ts"],"names":["DEFAULT_API_POLLING_DELAY_MS","StepFunctions","apiPollingDelay","init","options","stepFunctions","AWSClient","allStateMachines","listStateMachines","promise","undefined","build","stepFunction","runExecution","stateMachineName","input","executionApiPollingDelay","Error","smList","stateMachines","filter","stateMachine","name","stateMachineArn","executionParams","JSON","stringify","execution","startExecution","listExecParams","executionList","listExecutions","executions","exec","executionArn","status","length","Promise","resolve","setTimeout","describeExecution","obtainStateMachineArn","listStateMachineParams","find","obtainExecutionArn","StateMachineArn"],"mappings":"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","sourcesContent":["import { StepFunctions as AWSStepFunctions } from \"aws-sdk\";\nimport { AWSClient } from \"./general\";\n\nconst DEFAULT_API_POLLING_DELAY_MS = 1000;\n\ntype StepFunctionOptions = { apiPollingDelay?: number };\n\nexport default class StepFunctions {\n  stepFunctions: AWSStepFunctions | undefined;\n  allStateMachines: AWSStepFunctions.ListStateMachinesOutput | undefined;\n  apiPollingDelay = DEFAULT_API_POLLING_DELAY_MS;\n\n  async init(options: StepFunctionOptions = {}): Promise<void> {\n    this.stepFunctions = new AWSClient.StepFunctions();\n    this.allStateMachines = await this.stepFunctions\n      .listStateMachines()\n      .promise();\n    const { apiPollingDelay } = options;\n    if (apiPollingDelay !== undefined && apiPollingDelay > 0) {\n      this.apiPollingDelay = apiPollingDelay;\n    }\n  }\n\n  static async build(\n    options: StepFunctionOptions = {}\n  ): Promise<StepFunctions> {\n    const stepFunction = new StepFunctions();\n    await stepFunction.init(options);\n\n    return stepFunction;\n  }\n\n  // eslint-disable-next-line max-params\n  async runExecution(\n    stateMachineName: string,\n    input: unknown,\n    options: StepFunctionOptions = {}\n  ): Promise<AWSStepFunctions.DescribeExecutionOutput> {\n    const { apiPollingDelay } = options;\n    const executionApiPollingDelay =\n      apiPollingDelay !== undefined && apiPollingDelay > 0\n        ? apiPollingDelay\n        : this.apiPollingDelay;\n\n    if (this.allStateMachines === undefined) {\n      throw new Error(\n        \"The list of state machines is undefined. You might have forgotten to run build().\"\n      );\n    }\n    const smList = this.allStateMachines.stateMachines.filter(\n      (stateMachine: AWSStepFunctions.StateMachineListItem) =>\n        stateMachine.name === stateMachineName\n    );\n    const stateMachineArn = smList[0].stateMachineArn;\n    const executionParams = {\n      stateMachineArn: stateMachineArn,\n      input: JSON.stringify(input),\n    };\n    if (this.stepFunctions === undefined) {\n      throw new Error(\n        \"The Step Functions client is undefined. You might have forgotten to run build().\"\n      );\n    }\n    const execution: AWSStepFunctions.StartExecutionOutput =\n      await this.stepFunctions.startExecution(executionParams).promise();\n    const listExecParams = { stateMachineArn: stateMachineArn };\n    let executionList = await this.stepFunctions\n      .listExecutions(listExecParams)\n      .promise();\n    // Poll until the given execution is no longer running\n    while (\n      executionList.executions.filter(\n        (exec: AWSStepFunctions.ExecutionListItem) =>\n          exec.executionArn === execution.executionArn &&\n          exec.status === \"RUNNING\"\n      ).length !== 0\n    ) {\n      executionList = await this.stepFunctions\n        .listExecutions(listExecParams)\n        .promise();\n\n      // Wait before retrying to avoid throttle limits\n      await new Promise((resolve) =>\n        setTimeout(resolve, executionApiPollingDelay)\n      );\n    }\n\n    return await this.stepFunctions\n      .describeExecution({ executionArn: execution.executionArn })\n      .promise();\n  }\n\n  async obtainStateMachineArn(stateMachineName: string): Promise<string> {\n    const listStateMachineParams = {};\n    // Get all state machines\n    if (this.stepFunctions === undefined) {\n      throw new Error(\n        \"The Step Functions client is undefined. You might have forgotten to run build().\"\n      );\n    }\n    const allStateMachines = await this.stepFunctions\n      .listStateMachines(listStateMachineParams)\n      .promise();\n    // Find state machine with specified name and get its arn\n    const smList = allStateMachines.stateMachines.find(\n      (stateMachine: AWSStepFunctions.StateMachineListItem) =>\n        stateMachine.name === stateMachineName\n    );\n    if (smList == null) throw new Error(\"No matching state machine. \");\n\n    return smList.stateMachineArn;\n  }\n\n  async obtainExecutionArn(StateMachineArn: string): Promise<string> {\n    const listExecParams = { stateMachineArn: StateMachineArn };\n    if (this.stepFunctions == null) {\n      throw new Error(\n        \"The Step Functions client is undefined. You might have forgotten to run build().\"\n      );\n    }\n\n    // Get all executions for this stateMachine\n    const executionList = await this.stepFunctions\n      .listExecutions(listExecParams)\n      .promise();\n\n    return executionList.executions[0].executionArn;\n  }\n}\n"],"file":"stepFunctions.js"}